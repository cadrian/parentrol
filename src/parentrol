#!/bin/bash

# Parentrol: parental control
# Copyright (C) 2013-2014 Cyril Adrian <cyril.adrian@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


USERSDIR=${USERSDIR:-$(
        if [ -f /etc/parentrol/profile ]; then
            echo /etc/parentrol/$(< /etc/parentrol/profile)/users.d
        else
            echo /etc/parentrol/users.d
        fi
)}

case "$1" in
    help|--help|-h|-?)
        exec cat <<EOF

Parentrol: parental control
Copyright (C) 2013-2014 Cyril Adrian <cyril.adrian@gmail.com>
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions (see http://www.gnu.org/copyleft/gpl.html).

Usage:

$0 <user> <file> [<ext>] <value>
    Update the user parentrol definition
    <user>  the login of a limited user
    <file>  the file to modify: one of
            starttime, endtime, maxtime, gracetime
    <ext>   if present, either the specific day or 'override'
    <value> the time in format HH:MM or in minutes

$0 <user> <file> [<ext>] remove
    Remove the user parentrol definition
    <user>  the login of a limited user
    <file>  the file to modify: one of
            starttime, endtime, maxtime, gracetime
    <ext>   if present, either the specific day or 'override'

$0 <user> create
    Create the user
    <user>  the login of a limited user

$0 <user> remove
    Remove the user
    <user>  the login of a limited user

$0 <user> show
    Show the user control files
    <user>  the login of a limited user

$0 help
    This help

EOF
        ;;
    "")
        echo "$0: Expected <user> or help" >&2
        exit 1
        ;;
esac

user=$1
if [ ! -d $USERSDIR/$user ]; then
    if [ "$2" == create ]; then
        echo "$0: Creating $USERSDIR/$user"
        mkdir -p $USERSDIR/$user
        exit 0
    fi
    echo "$0: Unknown user $user" >&2
    exit 1
fi
case "$2" in
    remove)
        echo "$0: Removing $USERSDIR/$user"
        rm -rf $USERSDIR/$user
        exit 0
        ;;
    show)
        function cat_or_default {
            local file=$1
            local ext=$2
            local default=$3
            {
                if [ -e $file.ovr ]; then
                    cat $file.ovr
                elif [ -e $file$ext ]; then
                    cat $file$ext
                elif [ -e $file ]; then
                    cat $file
                else
                    echo $default
                fi
            } | awk '{printf("%02d:%02d", $0/60, $0%60)}'
            if [ -e $file.ovr ]; then
                echo ' (overridden)'
            elif [ -e $file$ext ]; then
                echo
            elif [ -e $file ]; then
                echo ' (standard)'
            else
                echo ' (default)'
            fi
        }

        echo
        format=" %-9s | %-20s %-20s %-20s %-20s\n"
        printf "$format" Day Start End Max Grace
        echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        while read ext day; do
            starttime=$(cat_or_default $USERSDIR/$user/starttime $ext 0)
            endtime=$(cat_or_default $USERSDIR/$user/endtime $ext 1440)
            maxtime=$(cat_or_default $USERSDIR/$user/maxtime $ext 120)
            gracetime=$(cat_or_default $USERSDIR/$user/gracetime $ext 5)
            printf "$format" "$day" "$starttime" "$endtime" "$maxtime" "$gracetime"
        done <<EOF
.Mon Monday
.Tue Tuesday
.Wed Wednesday
.Thu Thursday
.Fri Friday
.Sat Saturday
.Sun Sunday
EOF
        echo
        exit
esac

shift

if [ -z "$1" ]; then
    echo "$0: Expected file" >&2
    exit 1
fi

case "$1" in
    start*)
        file=starttime
        ;;
    end*)
        file=endtime
        ;;
    max*)
        file=maxtime
        ;;
    grace*)
        file=gracetime
        ;;
    *)
        echo "$0: Unknown file: $1" >&2
        exit 1
        ;;
esac
shift

case "$1" in
    [Mm]on*)
        ext=.Mon
        shift
        ;;
    [Tt]ue*)
        ext=.Tue
        shift
        ;;
    [Ww]ed*)
        ext=.Wed
        shift
        ;;
    [Tt]hu*)
        ext=.Thu
        shift
        ;;
    [Ff]ri*)
        ext=.Fri
        shift
        ;;
    [Ss]at*)
        ext=.Sat
        shift
        ;;
    [Ss]un*)
        ext=.Sun
        shift
        ;;
    [Oo]vr|[Oo]ver*)
        ext=.ovr
        shift
        ;;
    *)
        ext=""
        ;;
esac

if [ -z "$1" ]; then
    echo "$0: Expected value" >&2
    exit 1
fi

if [ "$1" == remove ]; then
    echo "$0: Removing $USERSDIR/$user/$file$ext"
    rm -f $USERSDIR/$user/$file$ext
else
    value=$(echo $1 | egrep '([0-9]{1,2}:[0-9]{1,2}|[0-9]{1,4})' | sed 's/:/*60+/' | bc 2>/dev/null)
    if [ -z "$value" ]; then
        echo "$0: Invalid value: $1" >&2
        exit 1
    elif [ "$value" -lt 0 -o "$value" -gt 1440 ]; then
        echo "$0: Value out of range: $1" >&2
        exit 1
    fi
    shift

    if [ -n "$1" ]; then
        echo "$0: Unexpected data: $1" >&2
        exit 1
    fi

    echo "$0: Setting $USERSDIR/$user/$file$ext to $value"
    echo $value > $USERSDIR/$user/$file$ext
fi
